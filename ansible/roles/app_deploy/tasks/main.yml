---
- name: Checkout to deployment branch
  git:
    repo: "{{ repo }}"
    dest: "{{ app_dir }}"
    version: "{{ branch }}"
    update: yes

- name: Create backend .env file
  copy:
    content: "{{ backend_env }}"
    dest: "{{ app_dir }}/backend/.env"
    mode: '0600'

- name: Create frontend .env file
  copy:
    content: "{{ frontend_env }}"
    dest: "{{ app_dir }}/frontend/.env"
    mode: '0600'

- name: Copy docker-compose file
  template:
    src: docker-compose.yml.j2
    dest: "{{ app_dir }}/docker-compose.yml"
    mode: '0644'

- name: Check manifest issue
  shell: |
    docker manifest inspect afeez511/frontend-dojodevops:{{ IMAGE_TAG }} || echo "Frontend manifest not found"
    docker manifest inspect afeez511/backend-dojodevops:{{ IMAGE_TAG }} || echo "Backend manifest not found"
  register: manifest_check

- name: Clean up problematic images
  shell: |
    # Force remove all tags of the images
    docker rmi -f $(docker images afeez511/frontend-dojodevops -q)
    docker rmi -f $(docker images afeez511/backend-dojodevops -q)
    
    # Clean any dangling images
    docker image prune -f
  args:
    chdir: "{{ app_dir }}"
  when: "'not found' in manifest_check.stdout"

- name: Deploy application stack with retry
  block:
    - name: Try deployment
      shell: |
        # Clean pull and deploy
        docker compose pull --quiet
        docker compose up -d --force-recreate
      args:
        chdir: "{{ app_dir }}"
  rescue:
    - name: Handle manifest error
      shell: |
        docker system prune -f
        docker compose pull --quiet
        docker compose up -d --force-recreate
      args:
        chdir: "{{ app_dir }}"